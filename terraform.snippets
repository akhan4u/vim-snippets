snippet aws
provider "aws" {
  region  = "${1:us-east-1}"
  profile = "default"
}
endsnippet

snippet azure
provider "azurerm" {
  subscription_id = "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
  client_id       = "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
  client_secret   = "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
  tenant_id       = "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
}
endsnippet

snippet common_tags
locals {
  common_tags = {
	terraform_managed = true
	environment       = "${1:dev}"
	cost_account      = "$1"
  }
}

endsnippet

snippet tags
tags = local.common_tags
endsnippet

snippet terraform
	provider "terraform" {
		
	}
endsnippet
snippet r_terraform_remote_state
	resource "terraform_remote_state" "${1}" {
		backend = "${2}"
	}
endsnippet
snippet r_terraform_remote_state_s3
terraform {
  backend "s3" {
    bucket = "${1:bucketName}"
    key    = "path/to/my/key"
    region = "us-east-1"
  }
}
endsnippet
snippet d_terraform_remote_state
	data "terraform_remote_state" "${1}" {
		backend = "${2}"
	}
endsnippet
snippet output
output "${1}" {
  value = "${2}"
}
endsnippet

snippet var
variable "${1}" {
  type = string
  default = "value"
}

endsnippet

snippet var_list
variable "${1}" {
  description = "${2}"
  type        = list(string)
  default     = ["string1", "string2", "string3"]
}

# Loop Over a List of string with for_each
# for_each = toset(var.$1)		# toset() converts a list to a set
# name     = each.value

# Loop Over a List of string with count
# count = length(var.$1)
# name  = var.$1[count.index]

endsnippet

snippet var_map
variable "${1}" {
  type = map
  default = {
    key1 = "value1"
    key2 = "value2"
    key3 = "value3"
  }
}

# Getting Key value from variable of Map type with lookup() function : lookup(var.$1, var.key, error)
# Example Lookup of AMI, with Region as Key and AMI Id as value      : ami = "lookup(var.$1, var.region, error)"

endsnippet

snippet prov_remote
provisioner "file" {
  source      = "script.sh"
  destination = "/tmp/script.sh"
}

provisioner "remote-exec" {
  inline = [
    "chmod +x /tmp/script.sh",
    "/tmp/script.sh args",
   ]
}
endsnippet

snippet prov_local
provisioner "local-exec" {
  command = "echo ${aws_instance.web.private_ip} >> private_ips.txt"
}
endsnippet

snippet cdk_json "Creates a sample cdk.json snippet" !b
{
  "app": "python3 app.py",
  "versionReporting": false,
  "context": {
    "project_name": "${1:cdkdemo}",
    "env": "${2:dev}",
    "@aws-cdk/core:enableStackNameDuplicates": "true",
    "aws-cdk:enableDiffNoFail": "true",
    "@aws-cdk/core:stackRelativeExports": "true"
  }
}
endsnippet

snippet aws_packer "Packer Template for AWS" !b
{
    "variables": {
        "aws_profile": "{{env }}",
        "name": "Packer-Image-{{isotime | clean_resource_name}}"
    },
    "builders": [
        {
            "type": "amazon-ebs",
            "name": "awsebs",
            "aws_profile": "{{user }}",
            "region": "{{user }}",
            "source_ami": "{{user }}",
            "instance_type": "{{user }}",
            "ssh_username": "{{user }}",
            "ami_name": "{{user }}",
            "ami_description": "Amazon AMI Created with Packer",
            "associate_public_ip_address": true,
            "ebs_optimized": true,
            "tags": {
                "Name": "{{user }}"
            }
        }
    ],
    "provisioners": [
        {
            "type": "shell",
            "scripts": [
                "scripts/script1.sh",
                "scripts/script2.sh"
            ],
            "execute_command": "{{ .Vars }} sudo -E sh '{{ .Path }}'",
            "pause_before": "10s"
        },
        {
            "type": "shell",
            "environment_vars": [
                "CLOUD_PROVIDER={{user }}"
            ],
            "inline": [
                "echo $CLOUD_PROVIDER | sudo tee -a /opt/cloud_provider"
            ]
        },
        {
            "type": "file",
            "source": "app.tar.gz",
            "destination": "/tmp/app.tar.gz"
        },
        {
            "type": "ansible",
            "playbook_file": "./playbook.yml"
        },
        {
            "type": "shell",
            "scripts": [
                "./ubuntu-cleanup.sh"
            ]
        }
    ],
    "post-processors": [
        {
            "type": "manifest",
            "output": "manifest.json",
            "strip_path": true
        }
    ]
}
endsnippet 

snippet aws_packer_variables "Packer Variables for AWS Builder" !b
{
    "cloud_provider": "aws",
    "aws_source_ami": "ami-09e67e426f25ce0d7",
    "aws_region": "us-east-1",
    "aws_instance_type": "t2.micro",
    "ssh_username": "ubuntu"
}
endsnippet

snippet gcp_packer "Packer Template for Google Cloud" !b
{
    "variables": {
        "instance_name": "Packer-Image-{{isotime | clean_resource_name}}"
    },
    "builders": [
        {
            "type": "googlecompute",
            "name": "googlecompute",
            "project_id": "{{user }}",
            "source_image_family": "{{user }}",
            "ssh_username": "{{user }}",
            "zone": "{{user }}",
            "address": "{{user }}",
            "machine_type": "{{user }}",
            "instance_name": "{{user }}",
            "network_project_id": "{{user }}",
            "subnetwork": "{{user }}",
            "disk_size": 50,
            "labels": {
                "name": "packer-{{user }}"
            },
            "tags": [
                "packer"
            ],
            "image_name": "{{user }}",
            "image_description": "Google Cloud Compute Image Created with Packer",
            "image_family": "packer",
            "image_labels": {
                "name": "packer-{{user }}"
            }
        }
    ],
    "provisioners": [
        {
            "type": "shell",
            "scripts": [
                "scripts/script1.sh",
                "scripts/script2.sh"
            ],
            "execute_command": "{{ .Vars }} sudo -E sh '{{ .Path }}'",
            "pause_before": "10s"
        },
        {
            "type": "shell",
            "environment_vars": [
                "CLOUD_PROVIDER={{user }}"
            ],
            "inline": [
                "echo $CLOUD_PROVIDER | sudo tee -a /opt/cloud_provider"
            ]
        },
        {
            "type": "file",
            "source": "app.tar.gz",
            "destination": "/tmp/app.tar.gz"
        },
        {
            "type": "ansible",
            "playbook_file": "./playbook.yml"
        },
        {
            "type": "shell",
            "scripts": [
                "./ubuntu-cleanup.sh"
            ]
        }
    ],
    "post-processors": [
        {
            "type": "manifest",
            "output": "manifest.json",
            "strip_path": true
        }
    ]
}
endsnippet

snippet gcp_packer_variables "Packer Variables for Google Cloud Builder" !b
{
    "cloud_provider": "gcp",
    "project_id": "",
    "network_project_id": "",
    "source_image_family": "ubuntu-1604-lts",
    "ssh_username": "ubuntu",
    "zone": "us-east4-a",
    "static_ip_address": "",
    "instance_type": "n1-standard-2",
    "subnetwork_name": "default"
}
endsnippet

snippet azure_packer "Packer Template for Azure" !b
{
    "variables": {
        "image_name": "Packer-Image-{{isotime | clean_resource_name}}"
    },
    "builders": [
        {
            "type": "azure-arm",
            "name": "azure",
            "use_azure_cli_auth": "true",
            "image_publisher": "{{user }}",
            "image_offer": "{{user }}",
            "image_sku": "{{user }}",
            "image_version": "{{user }}",
            "os_type": "Linux",
            "os_disk_size_gb": 50,
            "ssh_username": "{{user }}",
            "managed_image_resource_group_name": "{{user }}",
            "managed_image_name": "{{user }}",
            "build_resource_group_name": "{{user }}",
            "plan_info": {
                "plan_name": "{{user }}",
                "plan_product": "{{user }}",
                "plan_publisher": "{{user }}"
            },
            "shared_image_gallery_destination": {
                "subscription": "{{user }}",
                "resource_group": "{{user }}",
                "gallery_name": "{{user }}",
                "image_name": "{{user }}",
                "image_version": "{{user }}",
                "replication_regions": [
                    "East US",
                    "East US 2"
                ],
                "storage_account_type": "Standard_LRS"
            },
            "azure_tags": {
                "Name": "packer-{{user }}"
            },
            "vm_size": "{{user }}"
        }
    ],
    "provisioners": [
        {
            "type": "shell",
            "scripts": [
                "scripts/script1.sh",
                "scripts/script2.sh"
            ],
            "execute_command": "{{ .Vars }} sudo -E sh '{{ .Path }}'",
            "pause_before": "10s"
        },
        {
            "type": "shell",
            "environment_vars": [
                "CLOUD_PROVIDER={{user }}"
            ],
            "inline": [
                "echo $CLOUD_PROVIDER | sudo tee -a /opt/cloud_provider"
            ]
        },
        {
            "type": "file",
            "source": "app.tar.gz",
            "destination": "/tmp/app.tar.gz"
        },
        {
            "type": "ansible",
            "playbook_file": "./playbook.yml"
        },
        {
            "type": "shell",
            "scripts": [
                "./ubuntu-cleanup.sh"
            ]
        }
    ],
    "post-processors": [
        {
            "type": "manifest",
            "output": "manifest.json",
            "strip_path": true
        }
    ]
}
endsnippet

snippet azure_packer_variables "Packer Variables for Azure Builder" !b
{
    "cloud_provider": "azure",
    "image_publisher": "canonical",
    "image_offer": "0001-com-ubuntu-pro-focal",
    "image_sku": "pro-20_04-lts",
    "image_version": "latest",
    "ssh_username": "ubuntu",
    "instance_type": "Standard_B2ms",
    "resource_group_name": "should-already-exist",
    "sig_subscription_id": "should-already-exist",
    "sig_resource_group_name": "should-already-exist",
    "sig_gallery_name": "should-already-exist",
    "sig_image_name": "image-name",
    "sig_image_release_version": "1.0"
}
endsnippet
